<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Lenovo-PC" name="Command line test" tests="226" failures="0" timestamp="30 Jul 2016 05:09:43 GMT" time="1.506" errors="0">
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.483" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.001" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.007" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.001" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.0" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="shouldDeclareOutputFields" time="0.406" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="shouldEmitNothingIfNormalTupleIsReceived" time="0.1" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="shouldEmitSomethingIfTickTupleIsReceived" time="0.028" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="shouldSetTickTupleFrequencyInComponentConfigurationToNonZeroValue" time="0.018" classname="storm.starter.bolt.IntermediateRankingsBoltTest"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" time="0.007" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.005" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.002" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.002" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.006" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.021" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.006" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.003" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.0" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" time="0.001" classname="storm.starter.tools.NthLastModifiedTimeTrackerTest"/>
  <testcase name="constructorWithNegativeCountAndFieldsShouldThrowIAE" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="constructorWithNegativeCountAndNoFieldsShouldThrowIAE" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="constructorWithNullObjectAndFieldsShouldThrowIAE" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="constructorWithNullObjectAndNoFieldsShouldThrowIAE" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.004" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="fieldsShouldBeImmutable" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldBeEqualToItself" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldBeEqualToTrueDuplicates" time="0.003" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldBeEqualToTrueDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldBeEqualToTrueDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldCreateRankableObjectFromTuple" time="0.006" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveSameHashCodeAsTrueDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveSameHashCodeAsTrueDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldHaveSameHashCodeAsTrueDuplicates" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldReturnTheCount" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldReturnTheFields" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldReturnTheFields" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="shouldReturnTheObject" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="toStringShouldContainStringRepresentationsOfObjectAndCount" time="0.003" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="toStringShouldContainStringRepresentationsOfObjectAndCount" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.001" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="verifyCompareTo" time="0.0" classname="storm.starter.tools.RankableObjectWithFieldsTest"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnDefensiveCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnDefensiveCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnDefensiveCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnDefensiveCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnDefensiveCopy" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="copyShouldReturnDefensiveCopy" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="defaultConstructorShouldSetPositiveTopN" time="0.004" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" time="0.003" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" time="0.011" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" time="0.003" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldHaveDefaultConstructor" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldNotRankDuplicateObjectsMoreThanOnce" time="0.004" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldNotRankDuplicateObjectsMoreThanOnce" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.004" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.003" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldRemoveZeroCounts" time="0.0" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="sizeOfRankingsShouldNotGrowBeyondTopN" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="sizeOfRankingsShouldNotGrowBeyondTopN" time="0.001" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="updatingWithNewRankablesShouldBeThreadSafe" time="0.017" classname="storm.starter.tools.RankingsTest"/>
  <testcase name="shouldDeclareOutputFields" time="0.003" classname="storm.starter.bolt.RollingCountBoltTest"/>
  <testcase name="shouldEmitNothingIfNoObjectHasBeenCountedYetAndTickTupleIsReceived" time="0.101" classname="storm.starter.bolt.RollingCountBoltTest"/>
  <testcase name="shouldEmitSomethingIfAtLeastOneObjectWasCountedAndTickTupleIsReceived" time="0.003" classname="storm.starter.bolt.RollingCountBoltTest"/>
  <testcase name="shouldSetTickTupleFrequencyInComponentConfigurationToNonZeroValue" time="0.0" classname="storm.starter.bolt.RollingCountBoltTest"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" time="0.001" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="newInstanceShouldHaveEmptyCounts" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="testCounterWithSimulatedRuns" time="0.001" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="testCounterWithSimulatedRuns" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="testCounterWithSimulatedRuns" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="testCounterWithSimulatedRuns" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="testCounterWithSimulatedRuns" time="0.001" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="twoOrMoreSlotsShouldBeValid" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="twoOrMoreSlotsShouldBeValid" time="0.0" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="twoOrMoreSlotsShouldBeValid" time="0.001" classname="storm.starter.tools.SlidingWindowCounterTest"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="newInstanceShouldHaveEmptyCounts" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="positiveNumSlotsShouldBeOk" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="positiveNumSlotsShouldBeOk" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="positiveNumSlotsShouldBeOk" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="positiveNumSlotsShouldBeOk" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="shouldIncrementCount" time="0.001" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="shouldIncrementCountOnlyOneSlotAtATime" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="shouldReturnNonEmptyCountsWhenAtLeastOneObjectWasCounted" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="shouldReturnZeroForNonexistentObject" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="wipeSlotShouldSetAllCountsInSlotToZero" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="wipeZerosShouldRemoveAnyObjectsWithZeroTotalCount" time="0.0" classname="storm.starter.tools.SlotBasedCounterTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.0" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.005" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="positiveTopNShouldBeOk" time="0.002" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="shouldDeclareOutputFields" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="shouldEmitNothingIfNormalTupleIsReceived" time="0.022" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="shouldEmitSomethingIfTickTupleIsReceived" time="0.012" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
  <testcase name="shouldSetTickTupleFrequencyInComponentConfigurationToNonZeroValue" time="0.001" classname="storm.starter.bolt.TotalRankingsBoltTest"/>
</testsuite> <!-- Command line test -->
